The following is a digest of the repository "finetude1".
This digest is designed to be easily parsed by Large Language Models.

--- SUMMARY ---
Repository: finetude1
Files Analyzed: 82
Total Text Size: 95.14 KB
Estimated Tokens (text only): ~27 712

--- DIRECTORY STRUCTURE ---
finetude1/
├── backend/
│   └── myApp/
│       ├── media/
│       │   └── product_images/
│       │       ├── 240_F_1559989669_pe8nC8cjKNZqYQWLOJvL5nrFeXNwys3o.jpg [binary]
│       │       ├── 62223db91dd2b9492a29e3db9f325f87.jpg [binary]
│       │       ├── 777191b2cb3b6e72638647275def5bbb.jpg [binary]
│       │       ├── 7d9630d7f9707ef275d674704922540c.jpg [binary]
│       │       ├── blaack.jpg [binary]
│       │       ├── blackheels.jpg [binary]
│       │       ├── Bridal_Shoes.jpg [binary]
│       │       ├── Capture.PNG [binary]
│       │       ├── download.jpg [binary]
│       │       ├── PackBeige.jpg [binary]
│       │       ├── PackBlack_wqWbXB5.jpg [binary]
│       │       ├── PackBlack.jpg [binary]
│       │       ├── PackMaroon.jpg [binary]
│       │       ├── pink_2.jpg [binary]
│       │       ├── rBVaWFwWKo2AIK9kAAFhffkTfFg103.webp [binary]
│       │       ├── SandalLeather.jpg [binary]
│       │       ├── sandalTriplet.jpg [binary]
│       │       ├── Snadal.jpg [binary]
│       │       ├── wedding_bags.jpg [binary]
│       │       ├── whaterprof.jpg [binary]
│       │       └── zy-128169-12-20-19.jpg [binary]
│       ├── myApp/
│       │   ├── __init__.py
│       │   ├── asgi.py
│       │   ├── settings.py
│       │   ├── urls.py
│       │   └── wsgi.py
│       ├── products/
│       │   ├── management/
│       │   │   ├── commands/
│       │   │   │   ├── __init__.py
│       │   │   │   └── seed_products.py
│       │   │   └── __init__.py
│       │   ├── migrations/
│       │   │   ├── __init__.py
│       │   │   └── 0001_initial.py
│       │   ├── __init__.py
│       │   ├── admin.py
│       │   ├── apps.py
│       │   ├── models.py
│       │   ├── serializers.py
│       │   ├── tests.py
│       │   ├── urls.py
│       │   └── views.py
│       └── manage.py
└── frontend/
    └── my-ecommerce/
        ├── src/
        │   ├── API/
        │   │   └── api.js
        │   ├── assets/
        │   │   ├── beige.jpg [binary]
        │   │   ├── beigesac&sand.jpg [binary]
        │   │   ├── Beij.jpg [binary]
        │   │   ├── Beij2.jpg [binary]
        │   │   ├── black1.jpg [binary]
        │   │   ├── blackbags.jpg [binary]
        │   │   ├── blackheels.jpg [binary]
        │   │   ├── boutique.jpg [binary]
        │   │   ├── contact.jpg [binary]
        │   │   ├── logo1.png [binary]
        │   │   ├── logo2.png [binary]
        │   │   ├── mainbg.jpg [binary]
        │   │   ├── pinkbag.jpg [binary]
        │   │   ├── react.svg
        │   │   ├── redheels.jpg [binary]
        │   │   ├── sandal-sac-maron.jpg [binary]
        │   │   ├── sandal-sac.jpg [binary]
        │   │   ├── sandalBlack.jpg [binary]
        │   │   └── skoutch.jpg [binary]
        │   ├── components/
        │   │   ├── Footer.jsx
        │   │   ├── Header.jsx
        │   │   ├── Navbar.jsx
        │   │   └── Toast.jsx
        │   ├── context/
        │   │   └── CartContext.jsx
        │   ├── pages/
        │   │   ├── AboutPage.jsx
        │   │   ├── addprod.jsx
        │   │   ├── ContactPage.jsx
        │   │   ├── Home.jsx
        │   │   ├── login.jsx
        │   │   ├── register.css
        │   │   ├── register.jsx
        │   │   └── shop.jsx
        │   ├── App.css
        │   ├── App.jsx
        │   ├── data.js
        │   ├── index.css
        │   └── main.jsx
        ├── eslint.config.js
        ├── package.json
        ├── README.md
        └── vite.config.js


--- FILE CONTENTS ---
============================================================
FILE: backend/myApp/myApp/asgi.py
============================================================
"""
ASGI config for myApp project.

It exposes the ASGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/howto/deployment/asgi/
"""

import os

from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myApp.settings')

application = get_asgi_application()


============================================================
FILE: backend/myApp/myApp/settings.py
============================================================
"""
Django settings for myApp project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jdab)w@#t6q_whzu_5ea!=)i%-(m!vyvu#xqx@9z&lgirxedl!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products',
    'corsheaders',
    'rest_framework',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


============================================================
FILE: backend/myApp/myApp/urls.py
============================================================
"""
URL configuration for myApp project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/5.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static
from django.shortcuts import redirect
from rest_framework_simplejwt.views import TokenObtainPairView

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', lambda request: redirect('/products/')),  # Redirect root to products
    path('', include('products.urls')),
    path('api/login/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
]

if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


============================================================
FILE: backend/myApp/myApp/wsgi.py
============================================================
"""
WSGI config for myApp project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myApp.settings')

application = get_wsgi_application()


============================================================
FILE: backend/myApp/products/management/commands/__init__.py
============================================================
# This file makes the commands directory a Python package 

============================================================
FILE: backend/myApp/products/management/commands/seed_products.py
============================================================
from django.core.management.base import BaseCommand
from products.models import Product

class Command(BaseCommand):
    help = 'Seed the database with sample products'

    def handle(self, *args, **options):
        # Sample products data
        products_data = [
            {
                'name': 'Pack Black',
                'price': 399.99,
                'currency': 'MAD',
                'image': 'image1',
                'description': 'A comfortable Sandal and stylish bag.'
            },
            {
                'name': 'Summer Collection',
                'price': 299.99,
                'currency': 'MAD',
                'image': 'image2',
                'description': 'Perfect summer outfit with breathable fabric.'
            },
            {
                'name': 'Winter Essentials',
                'price': 599.99,
                'currency': 'MAD',
                'image': 'image3',
                'description': 'Warm and cozy winter collection for cold days.'
            },
            {
                'name': 'Casual Wear',
                'price': 199.99,
                'currency': 'MAD',
                'image': 'image4',
                'description': 'Comfortable casual wear for everyday use.'
            },
            {
                'name': 'Formal Attire',
                'price': 799.99,
                'currency': 'MAD',
                'image': 'image5',
                'description': 'Elegant formal wear for professional occasions.'
            },
            {
                'name': 'Sport Collection',
                'price': 349.99,
                'currency': 'MAD',
                'image': 'image6',
                'description': 'High-performance sportswear for active lifestyle.'
            },
            {
                'name': 'Evening Dress',
                'price': 899.99,
                'currency': 'MAD',
                'image': 'image7',
                'description': 'Stunning evening dress for special occasions.'
            },
            {
                'name': 'Accessories Pack',
                'price': 149.99,
                'currency': 'MAD',
                'image': 'image8',
                'description': 'Complete accessories pack to complement any outfit.'
            },
            {
                'name': 'Beach Collection',
                'price': 249.99,
                'currency': 'MAD',
                'image': 'image9',
                'description': 'Perfect beach collection for sunny days.'
            },
            {
                'name': 'Party Wear',
                'price': 449.99,
                'currency': 'MAD',
                'image': 'image10',
                'description': 'Trendy party wear for celebrations and events.'
            }
        ]

        # Clear existing products
        Product.objects.all().delete()
        self.stdout.write('Cleared existing products...')

        # Create new products
        created_products = []
        for product_data in products_data:
            product = Product.objects.create(**product_data)
            created_products.append(product)
            self.stdout.write(f'Created product: {product.name}')

        self.stdout.write(
            self.style.SUCCESS(f'Successfully created {len(created_products)} products!')
        ) 

============================================================
FILE: backend/myApp/products/management/__init__.py
============================================================
# This file makes the management directory a Python package 

============================================================
FILE: backend/myApp/products/migrations/0001_initial.py
============================================================
# Generated by Django 5.2.3 on 2025-07-18 00:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='MAD', max_length=3)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]


============================================================
FILE: backend/myApp/products/admin.py
============================================================
from django.contrib import admin
from .models import Product

admin.site.register(Product)


============================================================
FILE: backend/myApp/products/apps.py
============================================================
from django.apps import AppConfig


class ProductsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'products'


============================================================
FILE: backend/myApp/products/models.py
============================================================
from django.db import models

# Create your models here.

class Product(models.Model):
    name = models.CharField(max_length=200)
    price = models.DecimalField(max_digits=10, decimal_places=2)
    currency = models.CharField(max_length=3, default='MAD')
    image = models.ImageField(upload_to='product_images/', null=True, blank=True)
    description = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name

    class Meta:
        ordering = ['-created_at']


============================================================
FILE: backend/myApp/products/serializers.py
============================================================
from rest_framework import serializers
from .models import Product

class ProductSerializer(serializers.ModelSerializer):
    class Meta:
        model = Product
        fields = '__all__' 

============================================================
FILE: backend/myApp/products/tests.py
============================================================
from django.test import TestCase

# Create your tests here.


============================================================
FILE: backend/myApp/products/urls.py
============================================================
from django.urls import path
from . import views
from .views import ProductUploadAPIView

urlpatterns = [
    path('products/', views.product_list, name='product_list'),
    path('products/<int:product_id>/', views.product_detail, name='product_detail'),
    path('products/create/', views.create_product, name='create_product'),
    # API endpoints
    path('api/products/', views.product_list, name='api_product_list'),
    path('api/products/<int:product_id>/', views.product_detail, name='api_product_detail'),
    path('api/products/create/', views.create_product, name='api_create_product'),
    path('api/products/upload/', ProductUploadAPIView.as_view(), name='product-upload'),
] 

============================================================
FILE: backend/myApp/products/views.py
============================================================
from django.shortcuts import render
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
from .models import Product
import json
from django.http import HttpResponse
from rest_framework.parsers import MultiPartParser, FormParser
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from .serializers import ProductSerializer

def product_list(request):
    """API endpoint to return all products as JSON"""
    products = Product.objects.all()
    products_data = []
    
    for product in products:
        products_data.append({
            'id': product.id,
            'name': product.name,
            'price': float(product.price),
            'currency': product.currency,
            'image': product.image.url if product.image else None,
            'description': product.description
        })
    
    return JsonResponse(products_data, safe=False)

def product_detail(request, product_id):
    """API endpoint to return a single product by ID as JSON"""
    try:
        product = Product.objects.get(id=product_id)
        product_data = {
            'id': product.id,
            'name': product.name,
            'price': float(product.price),
            'currency': product.currency,
            'image': product.image.url if product.image else None,
            'description': product.description
        }
        return JsonResponse(product_data)
    except Product.DoesNotExist:
        return JsonResponse({'error': 'Product not found'}, status=404)

@csrf_exempt
@require_http_methods(["POST"])
def create_product(request):
    """API endpoint to create a new product"""
    try:
        data = json.loads(request.body)
        product = Product.objects.create(
            name=data.get('name'),
            price=data.get('price'),
            currency=data.get('currency', 'MAD'),
            image=data.get('image', ''),
            description=data.get('description', '')
        )
        
        product_data = {
            'id': product.id,
            'name': product.name,
            'price': float(product.price),
            'currency': product.currency,
            'image': product.image.url if product.image else None,
            'description': product.description
        }
        return JsonResponse(product_data, status=201)
    except json.JSONDecodeError:
        return JsonResponse({'error': 'Invalid JSON'}, status=400)
    except Exception as e:
        return JsonResponse({'error': str(e)}, status=400)

class ProductUploadAPIView(APIView):
    parser_classes = (MultiPartParser, FormParser)

    def post(self, request, *args, **kwargs):
        serializer = ProductSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

def home(request):
    return HttpResponse("Welcome to the homepage! Go to /products/ to see the product list.")


============================================================
FILE: backend/myApp/manage.py
============================================================
#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myApp.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)

    # Reset admin password
    from django.contrib.auth.models import User
    user = User.objects.get(username='admin')
    user.set_password('assia')
    user.save()
    exit()


if __name__ == '__main__':
    main()


============================================================
FILE: frontend/my-ecommerce/src/API/api.js
============================================================
import axios from 'axios';

const api = axios.create({
    baseURL: 'http://127.0.0.1:8000/api/',
    headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
    },

});

api.interceptors.request.use(
    (config) => {
        // Add token if available
        const token = localStorage.getItem('token'); // or use cookies, etc.
        if (token) {
            config.headers.Authorization = `Bearer ${token}`;
        }
        return config;
    },
    (error) => Promise.reject(error)
);

api.interceptors.response.use(
    (response) => response,
    (error) => {
        // Handle errors globally
        if (error.response && error.response.status === 401) {
            console.error('Unauthorized');
        }
        return Promise.reject(error);
    }
);

export default api;

============================================================
FILE: frontend/my-ecommerce/src/assets/react.svg
============================================================
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>

============================================================
FILE: frontend/my-ecommerce/src/components/Footer.jsx
============================================================
export default function Footer() {
  return (
    <footer className="relative bg-gradient-to-br from-purple-700 via-pink-500 to-yellow-400 text-white pt-16 pb-8 px-4 shadow-2xl overflow-hidden">
      {/* Wavy SVG Top Border */}
      <div className="absolute top-0 left-0 w-full overflow-hidden leading-none rotate-180" style={{height: '60px'}}>
        <svg viewBox="0 0 500 60" preserveAspectRatio="none" className="w-full h-full">
          <path d="M0,30 C150,80 350,0 500,30 L500,00 L0,0 Z" fill="#fff" fillOpacity="0.2" />
        </svg>
      </div>
      <div className="relative z-10 max-w-7xl mx-auto flex flex-col md:flex-row items-center justify-between gap-8">
        {/* Brand Logo & Name */}
        <div className="flex flex-col items-center md:items-start mb-6 md:mb-0">
          <div className="bg-white rounded-full p-2 shadow-2xl mb-2 animate-pulse border-4 border-pink-300">
            {/* <img src={require('../assets/logo1.png')} alt="Finetude Logo" className="h-14 w-14 object-contain rounded-full" /> */}
          </div>
          <h2 className="text-3xl font-extrabold tracking-tight gradient-text-animated drop-shadow-lg">Finetude Boutique</h2>
        </div>
        {/* Inspirational Quote */}
        <div className="text-center flex-1 px-4">
          <blockquote className="italic text-lg md:text-2xl text-white/90 font-medium animate-fade-in-up">
            "Fashion is the armor to survive the reality of everyday life."
          </blockquote>
          <span className="block mt-2 text-pink-100 text-sm animate-fade-in-up">— Bill Cunningham</span>
        </div>
        {/* Social Icons */}
        <div className="flex space-x-8 justify-center items-center">
          <a href="https://www.instagram.com/" target="_blank" rel="noopener noreferrer" className="hover:scale-125 transition-transform duration-300 animate-bounce text-3xl" aria-label="Instagram">
            <i className="fab fa-instagram"></i>
          </a>
          <a href="https://www.facebook.com/" target="_blank" rel="noopener noreferrer" className="hover:scale-125 transition-transform duration-300 animate-bounce text-3xl delay-100" aria-label="Facebook">
            <i className="fab fa-facebook"></i>
          </a>
          <a href="mailto:info@finetude.com" className="hover:scale-125 transition-transform duration-300 animate-bounce text-3xl delay-200" aria-label="Email">
            <i className="fas fa-envelope"></i>
          </a>
          <a href="https://www.tiktok.com/" target="_blank" rel="noopener noreferrer" className="hover:scale-125 transition-transform duration-300 animate-bounce text-3xl delay-300" aria-label="TikTok">
            <i className="fab fa-tiktok"></i>
          </a>
          <a href="https://wa.me/1234567890" target="_blank" rel="noopener noreferrer" className="hover:scale-125 transition-transform duration-300 animate-bounce text-3xl delay-400" aria-label="WhatsApp">
            <i className="fab fa-whatsapp"></i>
          </a>
        </div>
      </div>
      {/* Copyright */}
      <div className="relative z-10 text-center text-yellow-50 text-xs md:text-sm mt-10 opacity-80">
        &copy; {new Date().getFullYear()} Finetude Boutique. All rights reserved.
      </div>
    </footer>
  );
}


============================================================
FILE: frontend/my-ecommerce/src/components/Header.jsx
============================================================

export default function Header() {
 
}


============================================================
FILE: frontend/my-ecommerce/src/components/Navbar.jsx
============================================================
import { Link, useLocation } from 'react-router-dom';
import { useState, useEffect, useRef } from 'react';
import Logo from '../assets/logo1.png';
import { useCart } from '../context/CartContext';

export default function Navbar() {
  const { cart } = useCart();
  const [badgeBounce, setBadgeBounce] = useState(false);
  const prevCartCount = useRef(cart.length);

  useEffect(() => {
    if (cart.length > prevCartCount.current) {
      setBadgeBounce(true);
      setTimeout(() => setBadgeBounce(false), 500);
    }
    prevCartCount.current = cart.length;
  }, [cart.length]);
  const location = useLocation();
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // Handle scroll effect
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const navLinks = [
    { name: 'Home', path: '/', icon: '🏠' },
    { name: 'Shop', path: '/shop', icon: '🛍️' }, // We'll add a badge for this
    { name: 'About', path: '/about', icon: '✨' },
    { name: 'Contact', path: '/contact', icon: '💌' },
    { name: 'Login', path: '/login', icon: '👤' },
    { name: 'Register', path: '/register', icon: '🆕' },
  ];

  return (
    <>
      {/* Background blur effect */}
      <div className="fixed top-0 left-0 right-0 h-24 bg-gradient-to-r from-pink-50/80 via-purple-50/80 to-blue-50/80 backdrop-blur-md z-40"></div>
      
      <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-500 ${
        isScrolled 
          ? 'bg-white/90 backdrop-blur-lg shadow-lg border-b border-pink-200/50' 
          : 'bg-transparent'
      }`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-20">
            
            {/* Logo Section */}
            <div className="flex items-center space-x-4">
              <Link to="/" className="group relative">
                <div className="relative">
                  {/* Floating animation container */}
                  <div className="absolute -inset-2 bg-gradient-to-r from-pink-400 via-purple-400 to-blue-400 rounded-full blur-lg opacity-30 group-hover:opacity-50 transition duration-500 animate-pulse"></div>
                  
                  {/* Logo container */}
                  <div className="relative bg-white rounded-full p-2 shadow-xl border-2 border-pink-200/50 hover:border-pink-300 transition-all duration-300 hover:scale-110">
                    <img
                      src={Logo}
                      alt="Boutique Logo"
                      className="h-12 w-12 object-contain rounded-full"
                    />
                  </div>
                  
                  {/* Sparkle effects */}
                  <div className="absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce"></div>
                  <div className="absolute -bottom-1 -left-1 w-2 h-2 bg-pink-400 rounded-full animate-ping"></div>
                </div>
              </Link>
              
              {/* Brand name */}
              <div className="hidden sm:block">
                <h1 className="text-2xl font-bold bg-gradient-to-r from-pink-600 via-purple-600 to-blue-600 bg-clip-text text-transparent">
                  Boutique
                </h1>
                <p className="text-xs text-gray-500 font-medium tracking-wider">ELEGANCE & STYLE</p>
              </div>
            </div>

            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center space-x-1">
              {navLinks.map((link,index) => (
                <div key={link.name} className="relative group">
                  {/* Cart badge for Shop link */}
                  {link.name === 'Shop' && cart.length > 0 && (
                    <span
                      className={`absolute -top-2 -right-4 text-xs font-bold bg-gradient-to-r from-pink-500 to-purple-500 text-white rounded-full px-2 py-0.5 shadow-lg border-2 border-white transition-all duration-300 ${badgeBounce ? 'animate-bounce' : ''}`}
                      style={{ minWidth: 22, textAlign: 'center', zIndex: 10 }}
                    >
                      {cart.length}
                    </span>
                  )}
                  <Link
                    to={link.path}
                    className={`
                      relative px-6 py-3 rounded-full font-medium transition-all duration-300
                      hover:bg-gradient-to-r hover:from-pink-500/20 hover:to-purple-500/20
                      hover:shadow-lg hover:scale-105
                      ${location.pathname === link.path 
                        ? 'bg-gradient-to-r from-pink-500 to-purple-500 text-white shadow-lg' 
                        : 'text-gray-700 hover:text-gray-900'
                      }
                    `}
                    style={{
                      animationDelay: `${index * 100}ms`
                    }}
                  >
                    {/* Icon */}
                    <span className="mr-2 text-lg">{link.icon}</span>
                    {link.name}
                    
                    {/* Hover effect */}
                    <div className="absolute inset-0 rounded-full bg-gradient-to-r from-pink-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  </Link>
                  
                  {/* Active indicator */}
                  {location.pathname === link.path && (
                    <div className="absolute -bottom-1 left-1/2 transform -translate-x-1/2 w-2 h-2 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full animate-pulse"></div>
                  )}
                </div>
              ))}
            </div>

            {/* Mobile menu button */}
            <div className="md:hidden">
              <button
                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
                className="relative p-2 rounded-full bg-gradient-to-r from-pink-500/20 to-purple-500/20 hover:from-pink-500/30 hover:to-purple-500/30 transition-all duration-300"
              >
                <div className={`w-6 h-0.5 bg-gray-700 transition-all duration-300 ${isMobileMenuOpen ? 'rotate-45 translate-y-1' : ''}`}></div>
                <div className={`w-6 h-0.5 bg-gray-700 mt-1 transition-all duration-300 ${isMobileMenuOpen ? 'opacity-0' : ''}`}></div>
                <div className={`w-6 h-0.5 bg-gray-700 mt-1 transition-all duration-300 ${isMobileMenuOpen ? '-rotate-45 -translate-y-1' : ''}`}></div>
              </button>
            </div>
          </div>
        </div>

        {/* Mobile Menu */}
        <div className={`md:hidden transition-all duration-500 overflow-hidden ${
          isMobileMenuOpen ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'
        }`}>
          <div className="bg-white/95 backdrop-blur-lg border-t border-pink-200/50 px-4 py-6 space-y-4">
            {navLinks.map((link, index) => (
              <Link
                key={link.name}
                to={link.path}
                onClick={() => setIsMobileMenuOpen(false)}
                className={`
                  flex items-center space-x-3 px-4 py-3 rounded-xl font-medium transition-all duration-300
                  hover:bg-gradient-to-r hover:from-pink-500/20 hover:to-purple-500/20
                  ${location.pathname === link.path 
                    ? 'bg-gradient-to-r from-pink-500 to-purple-500 text-white shadow-lg' 
                    : 'text-gray-700 hover:text-gray-900'
                  }
                `}
                style={{
                  animationDelay: `${index * 100}ms`
                }}
              >
                <span className="text-xl">{link.icon}</span>
                <span>{link.name}</span>
              </Link>
            ))}
          </div>
        </div>
      </nav>
      
      {/* Spacer to prevent content from hiding under fixed navbar */}
      <div className="h-20"></div>
    </>
  );
}

============================================================
FILE: frontend/my-ecommerce/src/components/Toast.jsx
============================================================
import React from 'react';

export default function Toast({ message, type }) {
  return (
    <div
      className={`fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50 px-6 py-3 rounded-2xl shadow-xl text-white text-lg font-semibold transition-all duration-500 animate-fade-in-up
        ${type === 'success' ? 'bg-gradient-to-r from-pink-500 to-purple-500' : 'bg-gray-700'}
      `}
      style={{ minWidth: 180, textAlign: 'center', pointerEvents: 'none' }}
    >
      {message}
    </div>
  );
}


============================================================
FILE: frontend/my-ecommerce/src/context/CartContext.jsx
============================================================
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';

const CartContext = createContext();

export function useCart() {
  return useContext(CartContext);
}

export function CartProvider({ children }) {
  const [cartIds, setCartIds] = useState(() => {
    try {
      const stored = localStorage.getItem('cart');
      return stored ? JSON.parse(stored) : [];
    } catch {
      return [];
    }
  });
  const [products, setProducts] = useState([]);
  const [toast, setToast] = useState(null);

  // Fetch product details for all cart IDs
  useEffect(() => {
    async function fetchProducts() {
      if (cartIds.length === 0) {
        setProducts([]);
        return;
      }
      try {
        const response = await fetch(`http://localhost:8000/api/products/`);
        const allProducts = await response.json();
        // Filter only products in cart
        setProducts(allProducts.filter(p => cartIds.includes(p.id)));
      } catch (err) {
        setProducts([]);
      }
    }
    fetchProducts();
  }, [cartIds]);

  useEffect(() => {
    localStorage.setItem('cart', JSON.stringify(cartIds));
  }, [cartIds]);

  const addToCart = useCallback((product) => {
    setCartIds((prev) => {
      if (prev.includes(product.id)) return prev;
      setToast({ message: `${product.name} added to cart!`, type: 'success' });
      return [...prev, product.id];
    });
  }, []);

  const removeFromCart = useCallback((id) => {
    setCartIds((prev) => prev.filter((itemId) => itemId !== id));
  }, []);

  // Hide toast after 2 seconds
  useEffect(() => {
    if (toast) {
      const timer = setTimeout(() => setToast(null), 2000);
      return () => clearTimeout(timer);
    }
  }, [toast]);

  return (
    <CartContext.Provider value={{ cart: products, addToCart, removeFromCart, toast, setToast }}>
      {children}
    </CartContext.Provider>
  );
}


============================================================
FILE: frontend/my-ecommerce/src/pages/AboutPage.jsx
============================================================
import React from 'react';
// Import the images for high heels, bags, and sandals
import HeelsImage from '../assets/blackheels.jpg'; // Make sure this path is correct for YOUR heels image
import BagsImage from '../assets/blackbags.jpg';   // Make sure this path is correct for YOUR bags image
import SandalsImage from '../assets/sandalBlack.jpg'; // Make sure this path is correct for YOUR sandals image

export default function AboutPage() {
  return (
    <div className="about-gradient-bg min-h-screen font-sans">

      {/* Hero Section - Pastel Gradient with SVG Wave */}
      <section className="relative h-[220px] md:h-[320px] flex items-center justify-center text-white overflow-hidden rounded-b-3xl shadow-lg pastel-hero-bg">
        <div className="absolute inset-0 bg-gradient-to-r from-pink-300 via-yellow-200 to-purple-200 opacity-90"></div>
        <div className="relative z-10 text-center px-6 max-w-4xl mx-auto">
          <h1 className="text-4xl md:text-5xl font-extrabold leading-tight mb-3 drop-shadow-xl text-gradient-hero">
            Our Brand Vision
          </h1>
          <p className="text-lg md:text-xl text-pink-700 drop-shadow-md font-semibold">
            Innovation and excellence woven into every design.
          </p>
        </div>
        {/* SVG Wave */}
        <div className="absolute bottom-0 left-0 w-full overflow-hidden leading-none" style={{height: '60px'}}>
          <svg viewBox="0 0 500 60" preserveAspectRatio="none" className="w-full h-full">
            <path d="M0,30 C150,80 350,0 500,30 L500,60 L0,60 Z" fill="#fff" fillOpacity="0.7" />
          </svg>
        </div>
      </section>

      {/* Our Story Section */}
      <section className="py-20 px-6 max-w-6xl mx-auto text-center md:text-left">
        <div className="bg-white/80 rounded-3xl shadow-xl p-8 md:p-12 lg:p-16 border-l-8 border-pink-200 story-card">
          <h2 className="text-4xl font-extrabold text-gray-900 mb-8 relative inline-block">
            <span className="relative inline-block pb-4">
              Our Story
              <span className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-pink-300 to-yellow-300 rounded-full"></span>
            </span>
          </h2>
          <p className="text-lg text-gray-700 leading-relaxed mb-6">
            Welcome to <b>Sweety Shose</b>, a place where delightful style meets heartfelt craftsmanship. Born from a sprinkle of dreams and a whole lot of passion for empowering individuals, we've carefully gathered a collection that truly celebrates elegance, cozy comfort, and your unique sparkle. Every bag, every comfy sandal, and every graceful high heel in our selection is more than just an accessory—it's a little piece of joy, a trusted companion, and a promise of delightful quality.
          </p>
          <p className="text-lg text-gray-700 leading-relaxed">
            From the first sweet sketch to the final, loving stitch, we pour our hearts into finding the loveliest materials and collaborating with talented artisans. Our journey is a happy adventure of discovery, always seeking charming designs and kind practices to bring you timeless treasures that beautifully resonate with your own wonderful journey. Thank you for being a part of our whimsical story!
          </p>
        </div>
      </section>

      {/* Product Focus Sections - Bags, Sandals, and High Heels with creative cards */}
      <section className="py-20 px-6 max-w-7xl mx-auto">
        <h2 className="text-4xl font-extrabold text-center text-gray-900 mb-12 relative">
          <span className="relative inline-block pb-3">
            Our Little Creations
            <span className="absolute bottom-0 left-1/2 w-20 h-1 bg-gradient-to-r from-pink-300 to-yellow-300 transform -translate-x-1/2 rounded-full"></span>
          </span>
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
          {/* Bags Section */}
          <div className="bg-white/90 rounded-3xl shadow-xl flex flex-col md:flex-row items-center overflow-hidden transform hover:scale-105 hover:shadow-2xl transition-all duration-300 border-t-8 border-pink-200 product-card">
            <div className="md:w-1/2 p-6 md:p-8">
              <h3 className="text-3xl font-bold text-pink-700 mb-4">The Art of the Bag</h3>
              <p className="text-gray-700 leading-relaxed mb-4">
                More than just a carry-all, our bags are a blend of functional design and exquisite artistry. We meticulously select premium leathers and durable fabrics, ensuring each stitch contributes to a piece that is both beautiful and built to last. From elegant clutches to versatile totes, discover a bag that complements every facet of your life.
              </p>
              <ul className="list-disc list-inside text-gray-600 space-y-2">
                <li>Premium materials & hardware</li>
                <li>Thoughtful compartments</li>
                <li>Timeless designs</li>
              </ul>
            </div>
            <div className="md:w-1/2">
              <img
                src={BagsImage}
                alt="Our Cute Bags"
                className="w-full h-80 object-cover object-center md:rounded-l-none md:rounded-r-3xl border-4 border-pink-100 shadow-lg"
              />
            </div>
          </div>

          {/* Sandals Section */}
          <div className="bg-white/90 rounded-3xl shadow-xl flex flex-col md:flex-row-reverse items-center overflow-hidden transform hover:scale-105 hover:shadow-2xl transition-all duration-300 border-t-8 border-yellow-200 product-card">
            <div className="md:w-1/2 p-6 md:p-8">
              <h3 className="text-3xl font-bold text-yellow-600 mb-4">Stride in Comfort & Style</h3>
              <p className="text-gray-700 leading-relaxed mb-4">
                Embrace the warmth with our collection of sandals designed for ultimate comfort without compromising on style. Whether you seek laid-back slides for a beach day or chic gladiators for an evening out, our sandals feature cushioned soles and secure straps, ensuring every step is a pleasure.
              </p>
              <ul className="list-disc list-inside text-gray-600 space-y-2">
                <li>Ergonomic designs</li>
                <li>Breathable materials</li>
                <li>Vibrant seasonal trends</li>
              </ul>
            </div>
            <div className="md:w-1/2">
              <img
                src={SandalsImage}
                alt="Our Cozy Sandals"
                className="w-full h-80 object-cover object-center md:rounded-r-none md:rounded-l-3xl border-4 border-yellow-100 shadow-lg"
              />
            </div>
          </div>

          {/* High Heels Section */}
          <div className="bg-white/90 rounded-3xl shadow-xl flex flex-col md:flex-row items-center overflow-hidden transform hover:scale-105 hover:shadow-2xl transition-all duration-300 border-t-8 border-purple-200 product-card md:col-span-2 mx-auto max-w-4xl">
            <div className="md:w-1/2 p-6 md:p-8">
              <h3 className="text-3xl font-bold text-purple-700 mb-4">Elevate Your Presence</h3>
              <p className="text-gray-700 leading-relaxed mb-4">
                Step into confidence with our exquisite range of high heels. Each pair is sculpted to perfection, designed not just to add height but to enhance your posture and empower your stride. From classic pumps to daring stilettos, discover the perfect pair to complete your powerful ensemble.
              </p>
              <ul className="list-disc list-inside text-gray-600 space-y-2">
                <li>Precision engineering</li>
                <li>Luxurious finishes</li>
                <li>Designs for every occasion</li>
              </ul>
            </div>
            <div className="md:w-1/2">
              <img
                src={HeelsImage}
                alt="Our High Heels"
                className="w-full h-80 object-cover object-center md:rounded-l-none md:rounded-r-3xl border-4 border-purple-100 shadow-lg"
              />
            </div>
          </div>
        </div>
      </section>

      {/* Team/Values Section - Pastel Gradient */}
      <section className="relative h-[250px] md:h-[300px] flex items-center justify-center text-white overflow-hidden shadow-lg pastel-team-bg">
        <div className="absolute inset-0 bg-gradient-to-r from-yellow-200 via-pink-200 to-purple-200 opacity-90"></div>
        <div className="relative z-10 max-w-6xl mx-auto px-6 text-center">
          <h2 className="text-3xl md:text-4xl font-extrabold mb-4 drop-shadow-xl text-pink-600">
            Our Dedicated Team
          </h2>
          <div className="mx-auto flex items-center justify-center w-60 h-15 rounded-full bg-white/40 backdrop-blur-sm mb-6 shadow-lg border-3 border-pink-200 text-3xl font-bold text-pink-700">
            TEAM JOY
          </div>
          <p className="text-base md:text-lg text-pink-700 mb-6">
            Committed to excellence, innovation, and crafting designs that inspire.
          </p>
          <a
            href="/contact"
            className="inline-block bg-gradient-to-r from-pink-300 to-yellow-300 hover:from-yellow-300 hover:to-pink-300 text-pink-900 font-bold px-8 py-3 rounded-lg shadow-lg transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-pink-200 focus:ring-opacity-75"
          >
            Connect With Us
          </a>
        </div>
      </section>
    </div>
  );
}

============================================================
FILE: frontend/my-ecommerce/src/pages/addprod.jsx
============================================================
import React, { useState } from "react";

function AddProduct() {
  const [name, setName] = useState("");
  const [price, setPrice] = useState("");
  const [currency, setCurrency] = useState("MAD");
  const [description, setDescription] = useState("");
  const [image, setImage] = useState(null);
  const [message, setMessage] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();
    const formData = new FormData();
    formData.append("name", name);
    formData.append("price", price);
    formData.append("currency", currency);
    formData.append("description", description);
    formData.append("image", image);

    try {
      const response = await fetch("http://localhost:8000/api/products/upload/", {
        method: "POST",
        body: formData,
      });
      const data = await response.json();
      if (response.ok) {
        setMessage("Product uploaded successfully!");
        setName("");
        setPrice("");
        setCurrency("MAD");
        setDescription("");
        setImage(null);
      } else {
        setMessage("Error: " + JSON.stringify(data));
      }
    } catch (error) {
      setMessage("Error: " + error.message);
    }
  };

  return (
    <div style={{ maxWidth: 400, margin: "2rem auto", padding: 20, border: "1px solid #ccc", borderRadius: 8 }}>
      <h2>Add Product</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Name"
          value={name}
          onChange={e => setName(e.target.value)}
          required
          style={{ width: "100%", marginBottom: 10 }}
        />
        <input
          type="number"
          placeholder="Price"
          value={price}
          onChange={e => setPrice(e.target.value)}
          required
          style={{ width: "100%", marginBottom: 10 }}
        />
        <input
          type="text"
          placeholder="Currency"
          value={currency}
          onChange={e => setCurrency(e.target.value)}
          required
          style={{ width: "100%", marginBottom: 10 }}
        />
        <textarea
          placeholder="Description"
          value={description}
          onChange={e => setDescription(e.target.value)}
          required
          style={{ width: "100%", marginBottom: 10 }}
        />
        <input
          type="file"
          accept="image/*"
          onChange={e => setImage(e.target.files[0])}
          required
          style={{ width: "100%", marginBottom: 10 }}
        />
        <button type="submit" style={{ width: "100%" }}>Upload Product</button>
      </form>
      {message && <p style={{ marginTop: 20 }}>{message}</p>}
    </div>
  );
}

export default AddProduct;


============================================================
FILE: frontend/my-ecommerce/src/pages/ContactPage.jsx
============================================================
import React, { useState } from 'react'; // Import useState for form handling
// If you are using a global CSS file, make sure it's imported at a higher level,
// e.g., in App.js or index.js. If this component needs specific styles,
// ensure '../index.css' contains them or create a dedicated CSS module.

// For Font Awesome icons, you'd typically install a React library like react-icons
// For example: npm install react-icons
// import { FaMapMarkerAlt, FaEnvelope, FaPhoneAlt, FaClock } from 'react-icons/fa';

export default function ContactPage() {
  // State to manage form inputs
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    subject: '',
    message: '',
  });

  // Handle input changes
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  // Handle form submission
  const handleSubmit = (e) => {
    e.preventDefault(); // Prevent default form submission behavior (page reload)
    // You would typically send this data to a backend API here
    console.log('Form submitted:', formData);
    alert('Thank you for your message! We will get back to you soon.');
    // Optionally clear the form
    setFormData({
      name: '',
      email: '',
      subject: '',
      message: '',
    });
  };

  return (
    <div className="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen font-sans py-16">
      <div className="max-w-6xl mx-auto px-6">
        <h1 className="text-5xl font-extrabold text-center text-gray-900 mb-12 relative">
          <span className="relative inline-block pb-3">
            Get in Touch
            <span className="absolute bottom-0 left-1/2 w-28 h-1 bg-gradient-to-r from-teal-400 to-blue-500 transform -translate-x-1/2 rounded-full"></span>
          </span>
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 bg-white rounded-3xl shadow-2xl p-10 lg:p-16">

          {/* Contact Form Section */}
          <div className="flex flex-col justify-center">
            <h2 className="text-3xl font-bold text-gray-800 mb-8 text-center lg:text-left">Send Us a Message</h2>
            <form className="space-y-6" onSubmit={handleSubmit}> {/* Add onSubmit handler */}
              <div>
                <label htmlFor="name" className="block text-gray-700 text-lg font-semibold mb-2">Your Name</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  placeholder="John Doe"
                  value={formData.name} // Controlled component
                  onChange={handleChange} // Handle input change
                  className="w-full px-5 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-3 focus:ring-blue-300 transition-all duration-200 shadow-sm text-lg"
                  required // Make field required
                />
              </div>
              <div>
                <label htmlFor="email" className="block text-gray-700 text-lg font-semibold mb-2">Your Email</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  placeholder="john.doe@example.com"
                  value={formData.email} // Controlled component
                  onChange={handleChange} // Handle input change
                  className="w-full px-5 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-3 focus:ring-blue-300 transition-all duration-200 shadow-sm text-lg"
                  required // Make field required
                />
              </div>
              <div>
                <label htmlFor="subject" className="block text-gray-700 text-lg font-semibold mb-2">Subject</label>
                <input
                  type="text"
                  id="subject"
                  name="subject"
                  placeholder="Inquiry about an order"
                  value={formData.subject} // Controlled component
                  onChange={handleChange} // Handle input change
                  className="w-full px-5 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-3 focus:ring-blue-300 transition-all duration-200 shadow-sm text-lg"
                />
              </div>
              <div>
                <label htmlFor="message" className="block text-gray-700 text-lg font-semibold mb-2">Your Message</label>
                <textarea
                  id="message"
                  name="message"
                  rows="6"
                  placeholder="Tell us how we can help you..."
                  value={formData.message} // Controlled component
                  onChange={handleChange} // Handle input change
                  className="w-full px-5 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-3 focus:ring-blue-300 transition-all duration-200 shadow-sm resize-y text-lg"
                  required // Make field required
                ></textarea>
              </div>
              <button
                type="submit"
                className="w-full bg-gradient-to-r from-blue-600 to-blue-800 text-white font-bold py-4 rounded-xl hover:from-blue-700 hover:to-blue-900 transition-all duration-300 transform hover:scale-105 shadow-lg focus:outline-none focus:ring-4 focus:ring-blue-400 focus:ring-opacity-75"
              >
                Send Message
              </button>
            </form>
          </div>

          {/* Contact Info and Map Section */}
          <div className="flex flex-col justify-between p-8 bg-blue-50 rounded-2xl shadow-inner border border-blue-100">
            <div>
              <h2 className="text-3xl font-bold text-gray-800 mb-6 text-center lg:text-left">Contact Information</h2>
              <div className="space-y-6 text-lg text-gray-700">
                <div className="flex items-start">
                  {/* Using Font Awesome (if linked in public/index.html) or React Icons */}
                  <i className="fas fa-map-marker-alt text-blue-600 text-2xl mr-4 mt-1"></i>
                  {/* Or using React Icons: <FaMapMarkerAlt className="text-blue-600 text-2xl mr-4 mt-1" /> */}
                  <p>123 Fashion Ave, Style City, FS 90210</p>
                </div>
                <div className="flex items-start">
                  <i className="fas fa-envelope text-blue-600 text-2xl mr-4 mt-1"></i>
                  {/* Or using React Icons: <FaEnvelope className="text-blue-600 text-2xl mr-4 mt-1" /> */}
                  <p>support@yourcompany.com</p>
                </div>
                <div className="flex items-start">
                  <i className="fas fa-phone-alt text-blue-600 text-2xl mr-4 mt-1"></i>
                  {/* Or using React Icons: <FaPhoneAlt className="text-blue-600 text-2xl mr-4 mt-1" /> */}
                  <p>+1 (555) 123-4567</p>
                </div>
                <div className="flex items-start">
                  <i className="fas fa-clock text-blue-600 text-2xl mr-4 mt-1"></i>
                  {/* Or using React Icons: <FaClock className="text-blue-600 text-2xl mr-4 mt-1" /> */}
                  <p>Mon-Fri: 9:00 AM - 6:00 PM EST</p>
                </div>
              </div>
            </div>

            {/* Embedded Map */}
            <div className="mt-10 rounded-xl overflow-hidden shadow-md border border-gray-200">
              <iframe
                // IMPORTANT: Replace this with an actual Google Maps embed URL for your location.
                // The provided URL 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3153.220803510006!2d144.9625298153163!3d-37.81720887975191!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6ad642b568391d8b%3A0x6b53a060b1e1d0e!2sFederation%20Square!5e0!3m2!1sen!2sau!4v1678234567890!5m2!1sen!2sau' is invalid and won't display a map.
                // Go to Google Maps, find your location, click 'Share', then 'Embed a map', and copy the src.
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d12345.67890!2d-6.8361!3d34.020882!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xda7b1e42b23a7e3%3A0x1c2f8f7b7f7b7f7b!2sRabat%2C%20Morocco!5e0!3m2!1sen!2sma!4v1700000000000!5m2!1sen!2sma"
                width="100%"
                height="350"
                style={{ border: 0 }} // React style attribute for inline styles
                allowFullScreen=""
                loading="lazy"
                referrerPolicy="no-referrer-when-downgrade"
                title="Our Location on Map" // Good for accessibility
              ></iframe>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

============================================================
FILE: frontend/my-ecommerce/src/pages/Home.jsx
============================================================
import { useState, useEffect } from 'react';
import api from '../API/api';
import HeaderImage from '../assets/mainbg.jpg';
import { useCart } from '../context/CartContext';

export default function Home() {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const { addToCart } = useCart();

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        setLoading(true);
        const response = await api.get('/products');
        setProducts(response.data);
        setError(null);
      } catch (err) {
        console.error('Error fetching products:', err);
        setError('Failed to load products. Please try again later.');
      } finally {
        setLoading(false);
      }
    };

    fetchProducts();
  }, []);

  if (loading) {
    return (
      <div className="bg-gradient-to-br from-slate-100 to-blue-100 min-h-screen font-sans flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-xl text-slate-700">Loading products...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-gradient-to-br from-slate-100 to-blue-100 min-h-screen font-sans flex items-center justify-center">
        <div className="text-center">
          <div className="text-red-500 text-6xl mb-4">⚠️</div>
          <p className="text-xl text-slate-700 mb-4">{error}</p>
          <button 
            onClick={() => window.location.reload()} 
            className="bg-blue-600 hover:bg-blue-700 text-white font-bold px-6 py-3 rounded-lg transition-colors duration-300"
          >
            Try Again
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-gradient-to-br from-slate-100 to-blue-100 min-h-screen font-sans">
      {/* Creative Cover Section */}
      <div className="relative w-full h-72 md:h-96 flex flex-col items-center justify-center text-white mb-16 overflow-hidden">
        {/* Background Image with Enhanced Overlay */}
        <img
          src={HeaderImage}
          alt="Shop Cover"
          className="absolute inset-0 w-full h-full object-cover object-center brightness-75 transition-transform duration-500 hover:scale-105" // Added hover effect
        />
        <div className="absolute inset-0 bg-gradient-to-t from-blue-900/80 via-transparent to-transparent rounded-b-3xl" /> {/* Stronger gradient */}

        {/* Content with Enhanced Typography and Animation */}
        <div className="relative z-10 text-center px-4">
          <h1 className="text-4xl md:text-6xl font-extrabold drop-shadow-2xl mb-4 animate-fade-in-down" // Stronger shadow, added animation
              style={{ textShadow: '0 5px 15px rgba(0,0,0,0.5)' }}> {/* Custom text shadow for depth */}
            Discover the Latest Trends
          </h1>
          <p className="text-lg md:text-2xl text-blue-100 font-medium drop-shadow-lg mb-8 animate-fade-in-up" // Stronger shadow, added animation
             style={{ textShadow: '0 3px 10px rgba(0,0,0,0.4)' }}>
            Shop quality fashion and accessories for every style
          </p>
          <a
            href="#products"
            className="inline-block bg-blue-600 hover:bg-blue-700 text-white font-bold px-10 py-4 rounded-full shadow-xl transition-all duration-300 transform hover:scale-105 hover:ring-4 hover:ring-blue-400 hover:ring-opacity-75 focus:outline-none focus:ring-4 focus:ring-blue-400 focus:ring-opacity-75 animate-bounce-in" // Enhanced button with bounce and ring
          >
            Shop Now
          </a>
        </div>

        {/* Subtle Wave/Divider at the bottom of the Hero (optional, requires SVG)
          For simplicity, I'm just adding a decorative border here.
          A true SVG wave would be more complex to embed directly without a dedicated CSS file or component.
        */}
        <div className="absolute bottom-0 left-0 w-full h-8 bg-gradient-to-t from-blue-100 to-transparent"></div>
        <div className="absolute bottom-0 left-0 w-full h-1 bg-blue-200"></div> {/* Simple separator */}
      </div>

      {/* Product Grid Section */}
      <div className="max-w-7xl mx-auto px-4 py-8" id="products">
        <h2 className="text-4xl font-bold text-slate-800 mb-12 text-center tracking-tight border-b-4 border-blue-400 pb-4 inline-block mx-auto">
          Shop Our Collection
        </h2>
        {products.length === 0 ? (
          <div className="text-center py-12">
            <p className="text-xl text-slate-600">No products available at the moment.</p>
          </div>
        ) : (
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
            {products.map(product => (
              <div
                key={product.id}
                className="group bg-white rounded-2xl shadow-xl hover:shadow-3xl transition-all duration-300 flex flex-col items-center p-6 border border-slate-100 hover:border-blue-500 transform hover:-translate-y-2 relative overflow-hidden cursor-pointer" // Added group, stronger shadow, transform, cursor
              >
                {/* Product Image with Hover Effect */}
                <img
                  src={
                    product.image
                      ? product.image.startsWith('http')
                        ? product.image
                        : `http://localhost:8000${product.image.startsWith('/') ? '' : '/media/'}${product.image}`
                      : 'https://via.placeholder.com/150'
                  }
                  alt={product.name}
                  className="w-40 h-40 object-cover rounded-xl mb-4 border border-slate-200 group-hover:scale-105 transition-transform duration-300"
                />
                {/* Optional: "New Arrival" Badge */}
                {product.isNew && ( // Assuming products can have an 'isNew' property
                  <span className="absolute top-4 right-4 bg-yellow-400 text-yellow-900 text-xs font-bold px-3 py-1 rounded-full shadow-md rotate-6 transform-gpu opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                    New!
                  </span>
                )}

                {/* Product Info */}
                <h2 className="text-xl font-bold text-slate-900 mb-2 text-center">{product.name}</h2>
                <p className="text-slate-600 text-sm mb-3 text-center line-clamp-2">{product.description}</p> {/* line-clamp for consistent height */}

                {/* Price */}
                <span className="font-extrabold text-blue-700 text-2xl mb-4 mt-auto">
                  {product.price} {product.currency || 'MAD'}
                </span>

                {/* Add to Cart Button */}
                <button
                  className="creative-cart-btn w-full"
                  onClick={() => addToCart(product)}
                >
                  Add to Cart
                </button>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* New Creative Section: Why Choose Us */}
      <section className="bg-gradient-to-r from-blue-700 to-blue-900 text-white py-16 mt-20 shadow-inner">
        <div className="max-w-6xl mx-auto px-6 text-center">
          <h2 className="text-4xl md:text-5xl font-extrabold mb-10 drop-shadow-xl">
            Why Shop With Us?
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
            {/* Feature 1 */}
            <div className="bg-white/10 p-8 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 backdrop-blur-sm">
              <div className="text-5xl mb-4 text-yellow-300">
                <i className="fas fa-shipping-fast"></i> {/* Font Awesome icon */}
              </div>
              <h3 className="text-2xl font-bold mb-3">Fast Shipping</h3>
              <p className="text-blue-100 text-lg">
                Get your favorite items delivered right to your doorstep in record time.
              </p>
            </div>
            {/* Feature 2 */}
            <div className="bg-white/10 p-8 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 backdrop-blur-sm">
              <div className="text-5xl mb-4 text-red-300">
                <i className="fas fa-shield-alt"></i> {/* Font Awesome icon */}
              </div>
              <h3 className="text-2xl font-bold mb-3">Secure Payments</h3>
              <p className="text-blue-100 text-lg">
                Shop with confidence knowing your transactions are safe and secure.
              </p>
            </div>
            {/* Feature 3 */}
            <div className="bg-white/10 p-8 rounded-xl shadow-lg transform hover:scale-105 transition-transform duration-300 backdrop-blur-sm">
              <div className="text-5xl mb-4 text-green-300">
                <i className="fas fa-headset"></i> {/* Font Awesome icon */}
              </div>
              <h3 className="text-2xl font-bold mb-3">24/7 Support</h3>
              <p className="text-blue-100 text-lg">
                Our dedicated support team is always here to help you.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* You might want a Footer component here */}
    </div>
  );
}

============================================================
FILE: frontend/my-ecommerce/src/pages/login.jsx
============================================================
import React, { useState } from 'react';
import Logo from '../assets/logo1.png'; // Use your logo or a creative icon

export default function LoginPage() {
  // State to hold the values of email and password inputs
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  // State for displaying error messages (e.g., from validation or API)
  const [error, setError] = useState(''); 

  // Function to handle form submission
  const handleSubmit = (event) => {
    event.preventDefault(); // Prevents the default browser form submission behavior

    // Clear any previous errors
    setError(''); 

    // --- Basic Client-Side Validation ---
    if (!email.trim()) { // .trim() removes whitespace from both ends of a string
      setError('Please enter your email address.');
      return; // Stop the function if validation fails
    }
    if (!password.trim()) {
      setError('Please enter your password.');
      return;
    }

    // --- Simulate Login (Replace with your actual API call) ---
    console.log('Login attempt with:', { email, password });

    // Example of a fake login check:
    if (email === 'test@example.com' && password === 'password123') {
      alert('Login successful! (Simulated)');
      // In a real application, you would typically:
      // 1. Store user token/info (e.g., in localStorage)
      // 2. Redirect the user to a dashboard or home page
      // 3. Update global authentication state
    } else {
      setError('Invalid email or password. Please try again.');
    }
  };

  return (
    <div className="relative min-h-screen flex items-center justify-center bg-gradient-to-br from-pink-200 via-purple-200 to-blue-200 overflow-hidden">
      {/* Animated SVG Waves Background */}
      <div className="absolute inset-0 z-0 pointer-events-none">
        <svg className="absolute bottom-0 left-0 w-full h-40 opacity-60" viewBox="0 0 1440 320"><path fill="#a5b4fc" fillOpacity="0.5" d="M0,224L48,202.7C96,181,192,139,288,144C384,149,480,203,576,197.3C672,192,768,128,864,128C960,128,1056,192,1152,197.3C1248,203,1344,149,1392,122.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>
        <svg className="absolute top-0 right-0 w-full h-32 opacity-40" viewBox="0 0 1440 320"><path fill="#f472b6" fillOpacity="0.4" d="M0,32L48,58.7C96,85,192,139,288,170.7C384,203,480,213,576,197.3C672,181,768,139,864,128C960,117,1056,139,1152,154.7C1248,171,1344,181,1392,186.7L1440,192L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path></svg>
      </div>
      {/* Glassmorphism Card */}
      <div className="relative z-10 bg-white/60 backdrop-blur-2xl rounded-3xl shadow-2xl w-full max-w-md px-8 py-12 flex flex-col items-center border border-white/30">
        {/* Logo/Icon */}
        <div className="mb-6 animate-fade-in-down">
          <img src={Logo} alt="Finetude Logo" className="h-16 w-16 object-contain rounded-full shadow-lg border-4 border-pink-200 bg-white/80" />
        </div>
        {/* Login Form Title */}
        <h2 className="text-3xl font-extrabold text-gray-900 text-center mb-6 gradient-text-animated drop-shadow-lg animate-fade-in-up">Welcome Back!</h2>
        {/* Error Message Display */}
        {error && (
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 text-sm animate-shake" role="alert">
            <span className="block sm:inline">{error}</span>
          </div>
        )}
        <form onSubmit={handleSubmit} className="w-full animate-fade-in-up">
          {/* Email Input Field */}
          <div className="mb-4">
            <label htmlFor="email" className="block text-gray-700 text-sm font-bold mb-2">Email Address</label>
            <input
              type="email"
              id="email"
              name="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-4 focus:ring-pink-400 focus:border-pink-400 transition duration-200 bg-white/80 placeholder-gray-400"
              placeholder="you@example.com"
              required
            />
          </div>
          {/* Password Input Field */}
          <div className="mb-6">
            <label htmlFor="password" className="block text-gray-700 text-sm font-bold mb-2">Password</label>
            <input
              type="password"
              id="password"
              name="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 mb-3 leading-tight focus:outline-none focus:ring-4 focus:ring-purple-400 focus:border-purple-400 transition duration-200 bg-white/80 placeholder-gray-400"
              placeholder="********"
              required
            />
          </div>
          {/* Submit Button */}
          <div className="flex items-center justify-between">
            <button
              type="submit"
              className="w-full py-3 px-6 rounded-xl bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 text-white font-bold shadow-lg hover:from-purple-500 hover:to-pink-500 hover:scale-105 transition-all duration-300 text-lg tracking-wide animate-bounce-in"
            >
              Sign In
            </button>
          </div>
          {/* Links for Forgot Password / Sign Up */}
          <div className="mt-6 text-center">
            <a
              href="#"
              className="inline-block align-baseline font-semibold text-sm text-pink-600 hover:text-purple-700 transition-colors duration-200"
            >
              Forgot Password?
            </a>
            <p className="text-sm text-gray-600 mt-3">
              Don't have an account?{' '}
              <a href="#" className="font-bold text-purple-600 hover:text-pink-600 transition-colors duration-200">
                Sign Up
              </a>
            </p>
          </div>
        </form>
      </div>
    </div>
  );
}

============================================================
FILE: frontend/my-ecommerce/src/pages/register.css
============================================================
/* Creative Register Page Styles */
.creative-bg {
  min-height: 100vh;
  background: #f3f4f8;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

/* Floating blurred shapes */
.creative-bg::before, .creative-bg::after {
  content: '';
  position: absolute;
  border-radius: 50%;
  filter: blur(60px);
  opacity: 0.5;
  z-index: 0;
}
.creative-bg::before {
  width: 400px;
  height: 400px;
  background: linear-gradient(135deg, #a5b4fc 0%, #f472b6 100%);
  top: -120px;
  left: -120px;
}
.creative-bg::after {
  width: 350px;
  height: 350px;
  background: linear-gradient(135deg, #f472b6 0%, #6366f1 100%);
  bottom: -100px;
  right: -100px;
}

.register-container {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: calc(100vh - 120px); /* leave space for navbar and footer */
  padding-top: 48px;
  padding-bottom: 48px;
}

.creative-form {
  background: rgba(255,255,255,0.55);
  backdrop-filter: blur(18px) saturate(120%);
  -webkit-backdrop-filter: blur(18px) saturate(120%);
  border-radius: 2rem;
  box-shadow: 0 8px 32px 0 rgba(31,38,135,0.15);
  padding: 3.5rem 2.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  width: 440px;
  max-width: 95vw;
  z-index: 1;
  border: 3px solid;
  border-image: linear-gradient(90deg, #a5b4fc 0%, #f472b6 100%);
  border-image-slice: 1;
  transition: box-shadow 0.2s, border-color 0.2s;
}
.creative-form:focus-within {
  box-shadow: 0 12px 32px 0 rgba(99,102,241,0.18);
  border-image: linear-gradient(90deg, #6366f1 0%, #f472b6 100%);
  border-image-slice: 1;
}
.creative-title {
  font-family: 'Segoe UI', sans-serif;
  font-size: 2.2rem;
  background: linear-gradient(90deg, #6366f1, #f472b6);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
  text-align: center;
  margin-bottom: 1rem;
  font-weight: 700;
}
.creative-input-frame {
  background: rgba(255,255,255,0.35);
  border-radius: 1.3rem;
  padding: 0.3rem 0.7rem;
  margin-bottom: 0.5rem;
  box-shadow: 0 2px 16px 0 rgba(99,102,241,0.08);
  border: 2.5px solid;
  border-image: linear-gradient(90deg, #a5b4fc 0%, #f472b6 100%);
  border-image-slice: 1;
  transition: box-shadow 0.2s, border-color 0.2s;
  display: flex;
  align-items: center;
}
.creative-input-frame:focus-within {
  box-shadow: 0 4px 24px 0 rgba(99,102,241,0.13);
  border-image: linear-gradient(90deg, #6366f1 0%, #f472b6 100%);
  border-image-slice: 1;
}

.creative-input {
  padding: 0.8rem 1rem;
  border: none;
  border-radius: 1rem;
  background: transparent;
  font-size: 1rem;
  box-shadow: none;
  width: 100%;
  transition: background 0.2s, box-shadow 0.2s;
}
.creative-input:focus {
  background: transparent;
  outline: none;
  box-shadow: none;
}
.creative-btn {
  background: linear-gradient(90deg, #6366f1, #f472b6);
  color: #fff;
  border: none;
  border-radius: 1rem;
  padding: 0.8rem 1rem;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  box-shadow: 0 2px 12px 0 rgba(99,102,241,0.10);
  transition: background 0.2s, color 0.2s, box-shadow 0.2s;
}
.creative-btn:hover {
  background: linear-gradient(90deg, #f472b6, #6366f1);
  color: #fff;
  box-shadow: 0 4px 24px 0 rgba(244,114,182,0.18);
}
.creative-error {
  color: #d7263d;
  background: #fff0f3;
  padding: 0.5rem 1rem;
  border-radius: 0.7rem;
  text-align: center;
  font-weight: 500;
}
.creative-success {
  color: #6366f1;
  background: #f3f4f8;
  padding: 0.5rem 1rem;
  border-radius: 0.7rem;
  text-align: center;
  font-weight: 500;
}

.avatar-container {
  display: flex;
  justify-content: center;
  margin-bottom: 1rem;
}
.avatar-img {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  box-shadow: 0 4px 24px 0 rgba(99,102,241,0.18);
  border: 3px solid #f472b6;
  background: #fff;
  animation: avatar-pop 1s cubic-bezier(.68,-0.55,.27,1.55);
}
@keyframes avatar-pop {
  0% { transform: scale(0.5) rotate(-20deg); opacity: 0; }
  70% { transform: scale(1.1) rotate(8deg); opacity: 1; }
  100% { transform: scale(1) rotate(0deg); }
}
.input-icon {
  display: flex;
  align-items: center;
  margin-right: 0.6rem;
  opacity: 0.7;
}
.toggle-password {
  display: flex;
  align-items: center;
  margin-left: 0.6rem;
  cursor: pointer;
  opacity: 0.7;
  transition: opacity 0.2s;
}
.toggle-password:hover {
  opacity: 1;
}
.motivational-quote {
  text-align: center;
  font-size: 1rem;
  color: #a5b4fc;
  margin-bottom: 0.7rem;
  font-style: italic;
  letter-spacing: 0.01em;
  animation: fade-in-quote 1.2s;
}
@keyframes fade-in-quote {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}
.fade-in {
  animation: fadeInForm 1.1s cubic-bezier(.68,-0.55,.27,1.55);
}
@keyframes fadeInForm {
  from { opacity: 0; transform: translateY(40px) scale(0.98); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}


============================================================
FILE: frontend/my-ecommerce/src/pages/register.jsx
============================================================
import React, { useState } from 'react';
import './register.css';
import logo1 from '../assets/logo1.png';

export default function RegisterPage() {
  const [form, setForm] = useState({ name: '', email: '', password: '', confirmPassword: '' });
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
    setError('');
    setSuccess('');
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setError('');
    setSuccess('');

    if (!form.name.trim() || !form.email.trim() || !form.password.trim() || !form.confirmPassword.trim()) {
      setError('All fields are required.');
      return;
    }
    if (form.password.length < 8) {
      setError('Password must be at least 8 characters.');
      return;
    }
    if (form.password !== form.confirmPassword) {
      setError('Passwords do not match.');
      return;
    }
    setSuccess('Registration successful! (Simulated)');
  };

  return (
    <div className="register-container creative-bg">
      <form className="register-form creative-form fade-in" onSubmit={handleSubmit}>
        <div className="avatar-container">
          <img src={logo1} alt="Avatar" className="avatar-img" />
        </div>
        <h2 className="creative-title">Create Account</h2>
        <div className="motivational-quote">"Start your style journey with us!"</div>
        <div className="creative-input-frame">
          <span className="input-icon">{/* User SVG */}
            <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><path stroke="#a5b4fc" strokeWidth="2" d="M12 12c2.761 0 5-2.239 5-5s-2.239-5-5-5-5 2.239-5 5 2.239 5 5 5zm0 2c-3.314 0-10 1.657-10 5v3h20v-3c0-3.343-6.686-5-10-5z"/></svg>
          </span>
          <input
            type="text"
            name="name"
            placeholder="Full Name"
            value={form.name}
            onChange={handleChange}
            className="creative-input"
          />
        </div>
        <div className="creative-input-frame">
          <span className="input-icon">{/* Email SVG */}
            <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><path stroke="#a5b4fc" strokeWidth="2" d="M4 4h16v16H4V4zm0 0l8 8 8-8"/></svg>
          </span>
          <input
            type="email"
            name="email"
            placeholder="Email Address"
            value={form.email}
            onChange={handleChange}
            className="creative-input"
          />
        </div>
        <div className="creative-input-frame">
          <span className="input-icon">{/* Lock SVG */}
            <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><rect x="5" y="11" width="14" height="8" rx="2" stroke="#a5b4fc" strokeWidth="2"/><path stroke="#a5b4fc" strokeWidth="2" d="M8 11V7a4 4 0 1 1 8 0v4"/></svg>
          </span>
          <input
            type={showPassword ? "text" : "password"}
            name="password"
            placeholder="Password"
            value={form.password}
            onChange={handleChange}
            className="creative-input"
          />
          <span className="toggle-password" onClick={() => setShowPassword(v => !v)}>
            {showPassword ? (
              <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><path stroke="#f472b6" strokeWidth="2" d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7S1 12 1 12z"/><circle cx="12" cy="12" r="3" stroke="#f472b6" strokeWidth="2"/></svg>
            ) : (
              <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><path stroke="#f472b6" strokeWidth="2" d="M17.94 17.94A10.97 10.97 0 0 1 12 19c-7 0-11-7-11-7a21.77 21.77 0 0 1 5.06-5.94M1 1l22 22"/></svg>
            )}
          </span>
        </div>
        <div className="creative-input-frame">
          <span className="input-icon">{/* Lock SVG */}
            <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><rect x="5" y="11" width="14" height="8" rx="2" stroke="#a5b4fc" strokeWidth="2"/><path stroke="#a5b4fc" strokeWidth="2" d="M8 11V7a4 4 0 1 1 8 0v4"/></svg>
          </span>
          <input
            type={showConfirmPassword ? "text" : "password"}
            name="confirmPassword"
            placeholder="Confirm Password"
            value={form.confirmPassword}
            onChange={handleChange}
            className="creative-input"
          />
          <span className="toggle-password" onClick={() => setShowConfirmPassword(v => !v)}>
            {showConfirmPassword ? (
              <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><path stroke="#f472b6" strokeWidth="2" d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7S1 12 1 12z"/><circle cx="12" cy="12" r="3" stroke="#f472b6" strokeWidth="2"/></svg>
            ) : (
              <svg width="20" height="20" fill="none" viewBox="0 0 24 24"><path stroke="#f472b6" strokeWidth="2" d="M17.94 17.94A10.97 10.97 0 0 1 12 19c-7 0-11-7-11-7a21.77 21.77 0 0 1 5.06-5.94M1 1l22 22"/></svg>
            )}
          </span>
        </div>
        {error && <div className="creative-error">{error}</div>}
        {success && <div className="creative-success">{success}</div>}
        <button type="submit" className="creative-btn">Register</button>
      </form>
    </div>
  );
}


============================================================
FILE: frontend/my-ecommerce/src/pages/shop.jsx
============================================================
import React from 'react';
import { useCart } from '../context/CartContext';

export default function Shop() {
  const { cart, removeFromCart } = useCart();

  return (
    <div className="shop-page min-h-screen px-4 py-10 bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50">
      <h2 className="text-4xl font-extrabold text-center mb-10 bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 bg-clip-text text-transparent tracking-tight drop-shadow-lg">
        My Cart
      </h2>
      {cart.length === 0 ? (
        <div className="text-center text-gray-400 text-xl font-medium mt-20">
          Your cart is empty. Go to Home and add some items!
        </div>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
          {cart.map((product) => (
            <div key={product.id} className="bg-white rounded-2xl shadow-xl flex flex-col items-center p-6 border border-purple-100">
              {product.image && (
                <img
                  src={
                    product.image
                      ? product.image.startsWith('http')
                        ? product.image
                        : `http://localhost:8000${product.image.startsWith('/') ? '' : '/media/'}${product.image}`
                      : 'https://via.placeholder.com/150'
                  }
                  alt={product.name}
                  className="w-36 h-36 object-cover rounded-xl mb-4 border border-purple-100 shadow-lg"
                />
              )}
              <h3 className="text-xl font-bold text-purple-700 mb-2 text-center">{product.name}</h3>
              <p className="text-gray-500 text-sm mb-3 text-center line-clamp-2">{product.description}</p>
              <span className="font-extrabold text-pink-600 text-2xl mb-4 mt-auto">
                {product.price} {product.currency}
              </span>
              <button
                className="mt-2 px-5 py-2 rounded-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-semibold shadow-md hover:scale-105 hover:from-purple-500 hover:to-pink-500 transition-all duration-300"
                onClick={() => removeFromCart(product.id)}
              >
                Remove
              </button>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

============================================================
FILE: frontend/my-ecommerce/src/App.css
============================================================
body {
  background: #f8fafc; /* light gray, adjust as needed */
  min-height: 100vh;
  margin: 0;
  padding: 0;
}
/* Creative Add to Cart Button */
.creative-cart-btn {
  background: linear-gradient(90deg, #a21caf 0%, #ec4899 100%);
  color: #fff;
  border: none;
  border-radius: 1.2rem;
  padding: 0.7rem 1.5rem;
  font-size: 1.1rem;
  font-weight: bold;
  box-shadow: 0 2px 16px 0 rgba(236,72,153,0.15), 0 1.5px 7px 0 rgba(162,28,175,0.10);
  transition: background 0.2s, box-shadow 0.2s, transform 0.2s;
  letter-spacing: 0.02em;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}
.creative-cart-btn::after {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  border-radius: 1.2rem;
  background: linear-gradient(120deg, #f472b6 0%, #a21caf 100%);
  opacity: 0;
  transition: opacity 0.3s;
  z-index: 0;
}
.creative-cart-btn:hover, .creative-cart-btn:focus {
  background: linear-gradient(90deg, #ec4899 0%, #a21caf 100%);
  box-shadow: 0 6px 32px 0 rgba(236,72,153,0.22), 0 2px 12px 0 rgba(162,28,175,0.13);
  transform: scale(1.04);
}
.creative-cart-btn:active {
  transform: scale(0.98);
  box-shadow: 0 1px 4px 0 rgba(236,72,153,0.15);
}
.about-gradient-bg {
  background: linear-gradient(135deg, #ffe0ec 0%, #fffbe6 50%, #e0e7ff 100%);
}
.pastel-hero-bg {
  background: linear-gradient(90deg, #fbc2eb 0%, #fcdffb 50%, #f9f9e3 100%);
}
.pastel-team-bg {
  background: linear-gradient(90deg, #fffbe6 0%, #ffe0ec 100%);
}
.text-gradient-hero {
  background: linear-gradient(90deg, #f472b6, #fbbf24, #a78bfa);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}
.story-card {
  box-shadow: 0 8px 32px 0 rgba(244, 114, 182, 0.10);
  border-left: 8px solid #fbc2eb;
}
.product-card {
  box-shadow: 0 8px 32px 0 rgba(168, 85, 247, 0.10);
  border-top-width: 8px;
}


============================================================
FILE: frontend/my-ecommerce/src/App.jsx
============================================================
// src/App.js
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Navbar from './components/Navbar'; // Adjust path if your Navbar is in a different folder
import HomePage from './pages/Home'; // The Home page you previously discussed
import ShopPage from './pages/Shop'; // Fix: match file name
import AboutPage from './pages/AboutPage'; // We'll create this next!
import ContactPage from './pages/ContactPage'; // The Contact page we just designed
// App.js (Example)
import React from 'react';
import LoginPage from './pages/login'; // Adjust path as needed
import RegisterPage from './pages/register';
import './App.css';
import { CartProvider, useCart } from './context/CartContext';
import Toast from './components/Toast';
import Footer from './components/Footer';

// import LoginPage from './pages/LoginPage'; // You'll create this

function AppContent() {
  const { toast } = useCart();
  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/shop" element={<ShopPage />} />
        <Route path="/about" element={<AboutPage />} />
        <Route path="/contact" element={<ContactPage />} />
        <Route path="/login" element={<LoginPage />} />
        <Route path="/register" element={<RegisterPage />} />
      </Routes>
      {toast && <Toast message={toast.message} type={toast.type} />}
      <Footer />
    </Router>
  );
}

export default function App() {
  return (
    <CartProvider>
      <AppContent />
    </CartProvider>
  );
}


============================================================
FILE: frontend/my-ecommerce/src/data.js
============================================================
// Sample product data
import image1 from './assets/black1.jpg';
import image2 from './assets/beige.jpg';
import image3 from './assets/beij.jpg';
import image4 from './assets/skoutch.jpg';
import image5 from './assets/sandalBlack.jpg';
import image6 from './assets/Beij2.jpg';
import image7 from './assets/sandal-sac-maron.jpg';
import image8 from './assets/beigesac&sand.jpg';


export const products = [
  {
    id: 1,
    name: 'Pack Black ',
    price: 399.99,
    currency: 'MAD',
    // image:http:'http://127.0.0.1:8000/media/black1.jpg',
    description: 'A comfortable Sandal and stylish bag.'
  },
  {
    id: 2,
    name: 'Pack Beige',
    price: 499.99,
    currency: 'MAD',
    image: image2,
    description: 'Trendy Sandal and cool bag for everyday wear.'
  },
  {
    id: 3,
    name: 'Sandals',
    price: 199.99,
    currency: 'MAD',
    image: image3,
    description: 'Comfortable Sandals for all occasions.'
  },
  {
    id: 4,
    name: 'Leather Sandals',
    price: 299.99,
    currency: 'MAD',
    image: image4,
    description: 'A stylish leather sandals for cool summer.'
  },
  {
    id: 5,
    name: 'Black Triple-Buckle Sandal',
    price: 249.99,
    currency: 'MAD',
    image: image5,
    description: 'Summer sandal.'
  },
  {
    id: 6,
    name: 'Beige Triple-Buckle Sandal ',
    price: 249.99,
    currency: 'MAD',
    image: image6,
    description: 'Protect Comfortable Sandal.'
  },
  {
    id: 7,
    name: 'Pack Light Maroon',
    price: 399.99,
    currency: 'MAD',
    image: image7,
    description: 'A durable backpack for everyday use.'
  },
   {
    id: 8,
    name: 'Pack Beige',
    price: 399.99,
    currency: 'MAD',
    image: image8,
    description: 'A comfortable Sandal and stylish bag.'
  },
  // You can add more products and images as needed, but make sure to import them at the top
];

============================================================
FILE: frontend/my-ecommerce/src/index.css
============================================================
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800&family=Playfair+Display:wght@400;500;600;700;800&display=swap');
@import "tailwindcss";

/* Custom animations for the creative navbar */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes sparkle {
  0%, 100% { opacity: 0; transform: scale(0); }
  50% { opacity: 1; transform: scale(1); }
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes slide-in {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Navbar specific styles */
.navbar-glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.navbar-glass-scrolled {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-bottom: 1px solid rgba(236, 72, 153, 0.2);
}

/* Logo floating animation */
.logo-float {
  animation: float 3s ease-in-out infinite;
}

/* Sparkle effects */
.sparkle-1 {
  animation: sparkle 2s ease-in-out infinite;
  animation-delay: 0s;
}

.sparkle-2 {
  animation: sparkle 2s ease-in-out infinite;
  animation-delay: 1s;
}

/* Gradient text animation */
.gradient-text-animated {
  background: linear-gradient(-45deg, #ec4899, #8b5cf6, #3b82f6, #ec4899);
  background-size: 400% 400%;
  animation: gradient-shift 3s ease infinite;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Nav link hover effects */
.nav-link-hover {
  position: relative;
  overflow: hidden;
}

.nav-link-hover::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.nav-link-hover:hover::before {
  left: 100%;
}

/* Mobile menu slide animation */
.mobile-menu-slide {
  animation: slide-in 0.3s ease-out;
}

/* Custom scrollbar for webkit browsers */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(236, 72, 153, 0.1);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(45deg, #ec4899, #8b5cf6);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(45deg, #db2777, #7c3aed);
}

/* Floating particles background effect */
.floating-particles {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: linear-gradient(45deg, #ec4899, #8b5cf6);
  border-radius: 50%;
  animation: float 6s ease-in-out infinite;
}

.particle:nth-child(1) { left: 10%; animation-delay: 0s; }
.particle:nth-child(2) { left: 20%; animation-delay: 1s; }
.particle:nth-child(3) { left: 30%; animation-delay: 2s; }
.particle:nth-child(4) { left: 40%; animation-delay: 3s; }
.particle:nth-child(5) { left: 50%; animation-delay: 4s; }
.particle:nth-child(6) { left: 60%; animation-delay: 5s; }
.particle:nth-child(7) { left: 70%; animation-delay: 0s; }
.particle:nth-child(8) { left: 80%; animation-delay: 1s; }
.particle:nth-child(9) { left: 90%; animation-delay: 2s; }

/* Enhanced focus states for accessibility */
.nav-link:focus-visible {
  outline: 2px solid #ec4899;
  outline-offset: 2px;
  border-radius: 9999px;
}

/* Smooth transitions for all interactive elements */
* {
  transition: all 0.2s ease-in-out;
}

/* Custom selection color */
::selection {
  background: linear-gradient(45deg, #ec4899, #8b5cf6);
  color: white;
}

/* Loading animation for page transitions */
.page-transition {
  animation: slide-in 0.5s ease-out;
}

/* Responsive typography */
@media (max-width: 640px) {
  .gradient-text-animated {
    font-size: 1.5rem;
  }
}

/* Dark mode support (if needed) */
@media (prefers-color-scheme: dark) {
  .navbar-glass {
    background: rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .navbar-glass-scrolled {
    background: rgba(0, 0, 0, 0.95);
    border-bottom: 1px solid rgba(236, 72, 153, 0.3);
  }
}

============================================================
FILE: frontend/my-ecommerce/src/main.jsx
============================================================
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


============================================================
FILE: frontend/my-ecommerce/eslint.config.js
============================================================
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])


============================================================
FILE: frontend/my-ecommerce/package.json
============================================================
{
  "name": "my-ecommerce",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "start": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.1.11",
    "axios": "^1.10.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "tailwindcss": "^4.1.11"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.6.0",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.0.3"
  }
}


============================================================
FILE: frontend/my-ecommerce/README.md
============================================================
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.


============================================================
FILE: frontend/my-ecommerce/vite.config.js
============================================================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'


// https://vite.dev/config/
export default defineConfig({
  plugins: [
    react(),
    tailwindcss()
  ],
})